<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Miner_WPF"
        x:Class="Miner_WPF.WindowConfig"
        xmlns:uc="clr-namespace:Miner_WPF.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
        mc:Ignorable="d"
        Title="设置" Height="460" Width="360" WindowStyle="None" ResizeMode="NoResize"
        AllowsTransparency="True"  Background="Transparent" Topmost="True" ShowInTaskbar = "False" Icon="设置.png">
    <!--Resources-->
    <Window.Resources>
        <!--Performance value style-->
        <Style x:Key="PerformanceValueStyle" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <!--Performance introduction style-->
        <Style x:Key="PerformanceIntroStyle" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource InkBrush}"/>
        </Style>
        <!--Parameter introduction style-->
        <Style x:Key="ParameterIntroStyle" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <!--ComboBox style-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource GrayBrush}" Background="{StaticResource GrayBrush}"/>
                <Border Grid.Column="0" Margin="1"  Background="{StaticResource LeadBrush}"/>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource DarkBrush}"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource GrayBrush}" Background="{StaticResource WhiteBrush}" Margin="0,2,0,0" MinHeight="95"/>
                                    <ScrollViewer Margin="1,0,1,0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" SnapsToDevicePixels="true" Background="{StaticResource WhiteBrush}" BorderBrush="{StaticResource GrayBrush}" BorderThickness="0,0,0,1" Height="36"  Padding="2,10,0,0">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Gray}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Gray}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--View incoming style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonIncomingStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Transparent}"/>
            <Setter Property="BorderBrush" Value="{StaticResource GrayBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DullBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DullBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Automatic mining style-->
        <Style x:Key="ToggleSwitchButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource GrayBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGrayBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{StaticResource DarkGrayBrush}" BorderThickness="1" CornerRadius="8" Background="{StaticResource GrayBrush}" SnapsToDevicePixels="true">
                            <Ellipse x:Name="circle" Width="16" Height="16" Fill="{StaticResource WhiteBrush}" StrokeThickness="1" Stroke="{StaticResource DarkGrayBrush}" HorizontalAlignment="Left" Margin="-1,-1,0,-1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource DarkBrush}"/>
                                <Setter Property="HorizontalAlignment" TargetName="circle" Value="Right"/>
                                <Setter Property="Margin" TargetName="circle" Value="0,-1,-1,-1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Mining style-->
        <Style x:Key="ButtonMiningStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Opacity="0.8" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Name style-->
        <Style x:Key="NameStyle" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="20,10,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <!--Discription style-->
        <Style x:Key="DiscrStyle" TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource InkBrush}"/>
        </Style>
    </Window.Resources>
    <!--Controls-->
    <Grid Background="{StaticResource WhiteBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="80"/>
            <RowDefinition Height="200"/>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--Header panel-->
        <StackPanel Grid.Row="0" Background="{StaticResource DarkBrush}" Orientation="Horizontal">
            <TextBlock Text="挖矿设置" FontSize="14" Foreground="{StaticResource WhiteBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="290" Padding="10,0,0,0"/>
            <Canvas Width="70">
                <Canvas x:Name="btn_Help" Width="20" Height="20" Opacity="0.8" Canvas.Top="10">
                    <Ellipse Width="20" Height="20" Fill="{StaticResource WhiteBrush}"/>
                    <TextBlock Text="?" Foreground="{StaticResource DarkBrush}" FontSize="20" Width="20" HorizontalAlignment="Center" VerticalAlignment="Center" Canvas.Top="-2" Padding="5.5,0,0,0"/>
                    <Canvas.Resources>
                        <Style TargetType="Canvas">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="0.8" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Resources>
                </Canvas>
                <ed:RegularPolygon Height="8" Width="20" PointCount="3" Fill="{StaticResource WhiteBrush}" Canvas.Top="32" Visibility="{Binding ElementName=grid_help,Path=Visibility}"/>
                <Canvas x:Name="btn_Close" Width="24" Height="24" Opacity="0.8" Canvas.Left="36" Canvas.Top="8">
                    <Canvas.Resources>
                        <Style TargetType="{x:Type Canvas}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="0.8" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Resources>
                    <Canvas.Background>
                        <StaticResource ResourceKey="DarkBrush"/>
                    </Canvas.Background>
                    <Line X1="5" Y1="5" X2="19" Y2="19" Stroke="{StaticResource WhiteBrush}" StrokeThickness="2"/>
                    <Line X1="19" Y1="5" X2="5" Y2="19" Stroke="{StaticResource WhiteBrush}" StrokeThickness="2"/>
                </Canvas>
            </Canvas>
        </StackPanel>
        <!--Performance grid-->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.6*"/>
                <RowDefinition Height="0.4*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0" Content="{Binding Path=ComputeAbility, Converter={StaticResource PerfomanceLabelContentConverter}}" Style="{StaticResource PerformanceValueStyle}"/>
            <Label Grid.Row="1" Grid.Column="0" Content=" 算力（H/s）" Style="{StaticResource PerformanceIntroStyle}"/>
            <Label Grid.Row="0" Grid.Column="1" Content="{Binding Path=Accept, Converter={StaticResource PerfomanceLabelContentConverter}}" Style="{StaticResource PerformanceValueStyle}"/>
            <Label Grid.Row="1" Grid.Column="1" Content=" 接收（次）" Style="{StaticResource PerformanceIntroStyle}"/>
            <Label Grid.Row="0" Grid.Column="2" Content="{Binding Path=Reject, Converter={StaticResource PerfomanceLabelContentConverter}}" Style="{StaticResource PerformanceValueStyle}"/>
            <Label Grid.Row="1" Grid.Column="2" Content=" 拒绝（次）" Style="{StaticResource PerformanceIntroStyle}"/>
        </Grid>
        <!--Parameters grid-->
        <Grid Grid.Row="2">
            <Grid.IsEnabled>
                <MultiBinding Converter="{StaticResource IsParamInputEnabledConverter}">
                    <Binding Path="IsAlive"/>
                    <Binding Path="Config.Automatic"/>
                </MultiBinding>
            </Grid.IsEnabled>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.2*"/>
                <ColumnDefinition Width="0.8*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0" Content="矿池" Style="{StaticResource ParameterIntroStyle}"/>
            <uc:NoticeTextBox Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                              Text="{Binding Path=Config.Url,Mode=TwoWay}"
                              BText="请输入矿池地址"
                              UText="矿池地址无效">
                <uc:NoticeTextBox.Style>
                    <Style TargetType="uc:NoticeTextBox">
                        <Setter Property="UVisibility" Value="Collapsed"/>
                        <Setter Property="TBorderBrush" Value="{StaticResource GrayBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{local:ValidateBinding Url}" Value="True">
                                <Setter Property="UVisibility" Value="Visible"/>
                                <Setter Property="TBorderBrush" Value="{StaticResource DangerBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </uc:NoticeTextBox.Style>
            </uc:NoticeTextBox>
            <Label Grid.Row="1" Grid.Column="0" Content="地址" Style="{StaticResource ParameterIntroStyle}"/>
            <uc:NoticeTextBox Grid.Row="1" Grid.Column="1" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                              Text="{Binding Path=Config.User,Mode=TwoWay}"
                              BText="请输入钱包地址"
                              UText="钱包地址无效">
                <uc:NoticeTextBox.Style>
                    <Style TargetType="uc:NoticeTextBox">
                        <Setter Property="UVisibility" Value="Collapsed"/>
                        <Setter Property="TBorderBrush" Value="{StaticResource GrayBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{local:ValidateBinding User}" Value="True">
                                <Setter Property="UVisibility" Value="Visible"/>
                                <Setter Property="TBorderBrush" Value="{StaticResource DangerBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </uc:NoticeTextBox.Style>
            </uc:NoticeTextBox>
            <Label Grid.Row="2" Grid.Column="0" Content="编号" Style="{StaticResource ParameterIntroStyle}"/>
            <uc:NoticeTextBox Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                              Text="{Binding Path=Config.Id,Mode=TwoWay}"
                              BText="编号为字母与数字组合"
                              UText="编号为字母与数字组合">
                <uc:NoticeTextBox.Style>
                    <Style TargetType="uc:NoticeTextBox">
                        <Setter Property="UVisibility" Value="Collapsed"/>
                        <Setter Property="TBorderBrush" Value="{StaticResource GrayBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{local:ValidateBinding Id}" Value="True">
                                <Setter Property="UVisibility" Value="Visible"/>
                                <Setter Property="TBorderBrush" Value="{StaticResource DangerBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </uc:NoticeTextBox.Style>
            </uc:NoticeTextBox>
            <Label Grid.Row="3" Grid.Column="0" Content="线程" Style="{StaticResource ParameterIntroStyle}"/>
            <ComboBox x:Name="comboBox_Thread" SelectedValue="{Binding Path=Config.Thread,Mode=TwoWay}" Grid.Row="3" Grid.Column="1" ToolTip="线程数，默认为CPU核数的一半" Width="264" Height="36" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Margin="5,0,0,0"/>
        </Grid>
        <!--Config grid-->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.2*"/>
                <ColumnDefinition Width="0.4*"/>
                <ColumnDefinition Width="0.4*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="自动" Style="{StaticResource ParameterIntroStyle}"/>
            <ToggleButton x:Name="check_Automatic" IsChecked="{Binding Path=Config.Automatic,Mode=TwoWay}" Grid.Column="1" ToolTip="自动挖矿" Height="16" Width="32" Style="{DynamicResource ToggleSwitchButton}" HorizontalAlignment="Left" Margin="5,0,0,0" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked">
                <ToggleButton.IsEnabled>
                    <MultiBinding Converter="{StaticResource IsAutomaticEnabledConverter}" Mode="TwoWay">
                        <Binding Path="IsAlive"/>
                        <Binding Path="Config.Automatic"/>
                    </MultiBinding>
                </ToggleButton.IsEnabled>
            </ToggleButton>
            <Button x:Name="btn_Incoming" Grid.Column="2" Content="查看收益" Width="66" Height="26" Style="{DynamicResource ButtonIncomingStyle}"/>
        </Grid>
        <Button x:Name="btn_Mining" Grid.Row="4" Content="{Binding Path=IsAlive,Mode=TwoWay,Converter={StaticResource MiningButtonContentConverter}}" FontSize="14" Width="300" Height="44" Style="{DynamicResource ButtonMiningStyle}"/>
        <!--Help viewer-->
        <Grid x:Name="grid_help" Grid.Row="1" Grid.RowSpan="4" Background="{StaticResource WhiteBrush}" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <TextBlock Text="帮助" HorizontalAlignment="Center" Foreground="{StaticResource DarkBrush}" FontSize="14" FontWeight="Bold" Padding="10"/>
                <Canvas x:Name="btn_return" Width="24" Height="24" Opacity="0.8" HorizontalAlignment="Right" Background="{StaticResource WhiteBrush}" Margin="0,0,10,0">
                    <Canvas.Resources>
                        <Style TargetType="{x:Type Canvas}">
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="0.8" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Resources>
                    <Line X1="5" Y1="5" X2="19" Y2="19" Stroke="{StaticResource DarkBrush}" StrokeThickness="2"/>
                    <Line X1="19" Y1="5" X2="5" Y2="19" Stroke="{StaticResource DarkBrush}" StrokeThickness="2"/>
                </Canvas>
            </Grid>
            <ScrollViewer x:Name="view_help" Grid.Row="1">
                <ScrollViewer.Resources>
                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</sys:Double>
                </ScrollViewer.Resources>
                <StackPanel Width="350">
                    <Label Content="算力:" Style="{StaticResource NameStyle}" Margin="20,0,0,0"/>
                    <Label Content="挖矿工具在挖矿设备上运行的计算效率。" Style="{StaticResource DiscrStyle}"/>
                    <Label Content="接收:" Style="{StaticResource NameStyle}"/>
                    <Label Content="矿池分发计算任务数目，用share表示。" Style="{StaticResource DiscrStyle}"/>
                    <Label Content="拒绝:" Style="{StaticResource NameStyle}"/>
                    <Label Content="矿机提交到矿池无效的share数目，受网络通信影响较大。" Style="{StaticResource DiscrStyle}"/>
                    <Label Content="矿池:" Style="{StaticResource NameStyle}"/>
                    <Label Style="{StaticResource DiscrStyle}">
                        <TextBlock TextWrapping="Wrap">
                        矿池是Ulord、比特币等P2P密码学虚拟货币开采所必须的基础设施，其目标是稳定矿工的收益。矿工通过贡献自己的算力，按比例来获得收益，而矿工贡献的方式是通过提交share。矿池地址设置如u1pool.com:18888。
                        </TextBlock>
                    </Label>
                    <Label Content="地址:" Style="{StaticResource NameStyle}"/>
                    <Label Style="{StaticResource DiscrStyle}">
                        <TextBlock TextWrapping="Wrap">
                        挖矿所得收益地址，可通过Ulord官网下载的全节点钱包、轻钱包获得。
                        </TextBlock>
                    </Label>
                    <Label Content="编号:" Style="{StaticResource NameStyle}"/>
                    <Label Style="{StaticResource DiscrStyle}">
                        <TextBlock TextWrapping="Wrap">
                        矿机编号限定20个数字或字母，当多台机器用同一个钱包地址进行挖矿的时在矿池Web端可通过编号区分。
                        </TextBlock>
                    </Label>
                    <Label Content="线程:" Style="{StaticResource NameStyle}"/>
                    <Label Style="{StaticResource DiscrStyle}">
                        <TextBlock TextWrapping="Wrap">
                        智能检测您当前机器的cpu线程数,根据自己使用情况选择合适的线程数即可。
                        </TextBlock>
                    </Label>
                    <Label Content="自动:" Style="{StaticResource NameStyle}"/>
                    <Label Content="如果2分钟内未对电脑进行操作将自动开始挖矿。" Style="{StaticResource DiscrStyle}"/>
                    <Label Content="查看收益:" Style="{StaticResource NameStyle}"/>
                    <Label Style="{StaticResource DiscrStyle}">
                        <TextBlock TextWrapping="Wrap">
                        正常挖矿5-10分钟以后，点击此按钮会跳转至矿工在矿池算力详细页面。
                        </TextBlock>
                    </Label>
                    <Label Content="开始挖矿:" Style="{StaticResource NameStyle}"/>
                    <Label Content="设置参数完成后，点击此按钮即可开始挖矿。" Style="{StaticResource DiscrStyle}"/>
                    <TextBlock Height="20"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="© " VerticalAlignment="Center"/>
                        <TextBlock x:Name="btn_about">
                            <Hyperlink NavigateUri="https://ulord.one" Click="Hyperlink_Click">Ulord Foundation Ltd.
                                <Hyperlink.Resources>
                                    <Style TargetType="{x:Type Hyperlink}">
                                        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"></Setter>
                                                <Setter Property="TextBlock.TextDecorations">
                                                    <Setter.Value>
                                                        <TextDecorationCollection>
                                                            <TextDecoration Location="Underline"/>
                                                        </TextDecorationCollection>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Hyperlink.Resources>
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Text=" All rights reserved." VerticalAlignment="Center"/>
                    </StackPanel>
                    <TextBlock Height="40"/>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Window>
